/* CSS for both hover-invoked and click-invoked drop-downs. */

/* .droppable is shared by both click-invoked and hover-invoked drop-downs. */
.droppable {
  /* The drop-down list is hidden, unless shown by the user. */
  display: none;

  /* The drop-down list shows right below the button. */
  position: absolute;

  /* Hide the content behind the list by giving it an opaque background. */
  background-color: white;

  /* Show a vertical scrollbar, only if needed. */
  overflow-y: auto;

  /* Give the list some shadow to make it prettier. */
  box-shadow: 0 8px 16px rgb(0 0 0 / 20%);

  /* The list is given priority in display over the other elements. */
  z-index: 1;
  padding-left: 2px;
  padding-right: 2px;
}

/* .dropdown is specific to hover-invoked elements. */
.dropdown {
  position: relative;
  display: inline-block;
}

/* Hover-invoked .droppable: */
.dropdown .droppable {
  top: 8px;
  left: 100%;

  /* Show hover-invoked .droppable on one line: */
  white-space: nowrap; /* Prevent line breaks. */
  width: auto; /* Shrinks to fit content. */
  max-width: none; /* Prevents it from wrapping due to max width. */
  overflow-x: auto; /* Hide overflow if it becomes too long. */
  text-overflow: ellipsis; /* Hide overflow if it becomes too long. */
}

/* Hovering a .dropdown element causes its child .droppable to show.
 * A hover-invoked droppable must be a child of its driving .dropdown! */
.dropdown:hover .droppable {
  display: block;
}

/* .drop is specific to click-invoked elements. Clicking a .drop element toggles
 * the display of its associated .droppable.
 * This is controlled in JavaScript. */
.drop {
  padding: 0;
  cursor: pointer;
}
